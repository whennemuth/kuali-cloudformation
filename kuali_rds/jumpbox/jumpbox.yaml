AWSTemplateFormatVersion: '2010-09-09'

Description: |
  An ec2 instance serving as a jump server to the kuali RDS database.
  Used to accomodate connections to the RDS instance from outside of its subnet/vpc.

Parameters:

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention.
    Default: kuali-db-jumpbox

  Landscape:
    Description: Specify a name for your landscape
    Type: String
    AllowedPattern: "[a-zA-Z\\d]{1,12}"
    ConstraintDescription: Up to 12 letters and/or numbers

  # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/retrieve-ecs-optimized_AMI.html
  ECSAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id

  JumpboxInstanceType:
    Type: String
    Description: What type of EC2 instance should be used?
    AllowedValues:
    - t2.small
    - t2.medium
    - t2.large
    - t3.small
    - t3.medium
    - t3.large
    ConstraintDescription: Specified instance type is not within selection list.
    Default: t3.small

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The id of the vpc to deploy to.
  
  TemplateBucketName:
    Type: String
    Description: The S3 bucket kuali research cloudformation templates, config files, keys, etc. are stored
    Default: kuali-conf

  RdsDbSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Id of the first private subnet of the RDS subnet group

  RdsSubnetCIDR1:
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: It must be a valid IP CIDR range of the form x.x.x.x/x. 
    Description: |
      The IP address range of the subnet containing the oracle RDS instances. 
      Accessible from the campus subnet over the default "local" route.
    MaxLength: 18
    MinLength: 9 
    Type: String

  RdsSubnetCIDR2:
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: It must be a valid IP CIDR range of the form x.x.x.x/x. 
    Description: |
      The IP address range of the subnet containing the oracle RDS instances. 
      Accessible from the campus subnet over the default "local" route.
    MaxLength: 18
    MinLength: 9 
    Type: String

  DBPort:
    Description: TCP/IP Port for the Database Instance
    Type: Number
    Default: 1521
    ConstraintDescription: Must be in the range [1115-65535]
    MinValue: 1115
    MaxValue: 65535

  StopInstanceCronSchedule:
    Description: | 
      Include here a daily cron schedule expression for stop this instance. Must be entered as UTC time. 
      For example, for daily at midnight EST, enter '0 5 * * *'
    Type: String
    Default: '0 8 * * *'

Resources:

  JumpboxRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      RoleName: !Sub ${GlobalTag}-${Landscape}
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Policies:
      # https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-restrict-access-examples.html
      - PolicyName:
          !Sub ${GlobalTag}-${Landscape}-db-jumpbox-policy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: ssm:StartSession
            Resource: 
            - arn:aws:rds:*:*:db:*
            - arn:aws:ssm:*:*:document/AWS-StartSSHSession
            Condition:
              StringLike:
                ssm:resourceTag/Name:
                - "kuali*"
          - Effect: Allow
            Action: ssm:TerminateSession
            # NOTE: Cannot use username of session because this is an assumed role.
            # Resource:
            # - arn:aws:ssm:*:*:session/${aws:username}-*
            Resource: "*"
            Condition:
              StringLike:
                ssm:resourceTag/aws:ssmmessages:session-id:
                - "${aws:userid}"
          - Effect: Allow
            Resource: "*"
            Action:
            - ec2:DescribeTags
          - Effect: Allow
            Action:
            - ec2:StopInstances
            Resource: 
            - arn:aws:ec2:*:*:instance/*
            Condition:
              StringLike:
                ec2:ResourceTag/Name:
                  !Sub ${GlobalTag}-${Landscape}
              StringEquals:
                ec2:ResourceTag/self-stoppable:
                  'true'

  JumpboxInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${GlobalTag}-${Landscape}
      Path: "/"
      Roles:
      - !Ref JumpboxRole

  JumpboxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Lets in only traffic from the subnets the RDS database instances are in.
        GroupName: !Sub ${GlobalTag}-${Landscape}-sg
        VpcId: !Ref VpcId
        SecurityGroupIngress:
          - IpProtocol: tcp
            CidrIp: !Ref RdsSubnetCIDR1
            FromPort: !Ref DBPort
            ToPort: !Ref DBPort
          - IpProtocol: tcp
            CidrIp: !Ref RdsSubnetCIDR2
            FromPort: !Ref DBPort
            ToPort: !Ref DBPort

  JumpboxInstanceLogsGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub ${GlobalTag}-${Landscape}-jumpbox
      RetentionInDays: 30
      
  JumpboxInstance:
    Type: AWS::EC2::Instance
    DependsOn: JumpboxInstanceLogsGroup
    Description: EC2 instance providing jumpbox access to RDS database instances in the same VPC.
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT5M
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${GlobalTag}-${Landscape}
      - Key: Type
        Value: Jumpbox
      - Key: App
        Value: Kuali
      - Key: Landscape
        Value: !Ref Landscape
      - Key: self-stoppable
        Value: 'true'
      ImageId: 
        !Ref ECSAMI
      InstanceType:
        !Ref JumpboxInstanceType
      SecurityGroupIds: 
      - !GetAtt JumpboxSecurityGroup.GroupId
      IamInstanceProfile:
        !Ref JumpboxInstanceProfile
      SubnetId: !Ref RdsDbSubnet1

      UserData: 
        "Fn::Base64": !Sub |
          #!/bin/bash
          yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
          yum install -y aws-cfn-bootstrap 
          yum install -y ec2-instance-connect
          
          # Implement all the metadata in AWS::CloudFormation::Init
          /opt/aws/bin/cfn-init \
            -v \
            --region ${AWS::Region} \
            --stack ${AWS::StackName} \
            --resource JumpboxInstance

          # Now that all initialization is done signal success
          /opt/aws/bin/cfn-signal \
            -e $? \
            --region ${AWS::Region} \
            --stack ${AWS::StackName} \
            --resource JumpboxInstance

    Metadata:
      AWS::CloudFormation::Init:
        config: 
          packages: 
            yum:
              awslogs: []
          files: 
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file = /var/lib/awslogs/agent-state
                
                [/var/log/dmesg]
                file = /var/log/dmesg
                log_group_name = ${GlobalTag}-${Landscape}-jumpbox
                log_stream_name = {instance_id}/var/log/dmesg
                
                [/var/log/messages]
                file = /var/log/messages
                log_group_name = ${GlobalTag}-${Landscape}-jumpbox
                log_stream_name = {instance_id}/var/log/messages
                datetime_format = %b %d %H:%M:%S
            /etc/cron.d/stop-instance:
              content: !Sub |
                SHELL=/bin/bash
                PATH=/sbin:/bin:/usr/sbin:/usr/bin
                MAILTO=root

                # Stop this instance at the same time daily:
                ${StopInstanceCronSchedule} root sh /usr/local/sbin/stop-instance.sh
              mode: "000644"
              owner: root
              group: root
            /usr/local/sbin/stop-instance.sh:
              source: !Sub http://${TemplateBucketName}.s3.amazonaws.com/cloudformation/scripts/ec2/stop-instance.sh
              mode: "000775"
              owner: root
              group: root
 
Outputs:

  InstanceID:
    Description: The Instance ID
    Value: !Ref JumpboxInstance

  PrivateIP:
    Description: The Instance private ip address
    Value:
      !GetAtt JumpboxInstance.PrivateIp

