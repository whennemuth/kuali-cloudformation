AWSTemplateFormatVersion: 2010-09-09

Description: Toggle logging for a web application firewall (WAF).

Parameters: 

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention. If a nested stack,
      this will most likely be the name of the top-most stack.
    Default: kuali-waf
    
  Service:
    Description: Service catalog name
    Type: String
    Default: research-administration

  Function:
    Description: The Function within the Service
    Type: String
    Default: kuali

  Landscape:
    Description: Specify a name for your landscape
    Type: String
    AllowedPattern: "[a-zA-Z\\d]{1,12}"
    ConstraintDescription: Up to 12 letters and/or numbers
  
  TemplateBucketName:
    Type: String
    Description: The S3 bucket kuali research cloudformation templates, config files, keys, etc. are stored
    Default: kuali-conf

  RetainLogs:
    Type: String
    Description: Indicate if the logs produced by the lambda function should survive stack deletion.
    Default: "false"
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.


Conditions:
  retainLogs: !Equals [!Ref RetainLogs, 'true']
  deleteLogs: !Equals [!Ref RetainLogs, 'false']


Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      # - PolicyName: !Sub ${GlobalTag}-${Landscape}-lambda-logging
      #   PolicyDocument:
      #     Version: '2012-10-17'
      #     Statement:
      #     - Effect: Allow
      #       Action:
      #       - logs:*
      #       Resource: arn:aws:logs:*:*:*
      - PolicyName: !Sub ${GlobalTag}-${Landscape}-waf-toggle-logging-execution
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - wafv2:Get*
              - wafv2:List*
              - wafv2:Describe*
              - wafv2:PutLoggingConfiguration
              - wafv2:DeleteLoggingConfiguration
            Resource:
            - !Sub arn:aws:wafv2:*:*:regional/webacl/${GlobalTag}-${Landscape}-*/*
          - Effect: Allow
            Action:
            - tag:Get*
            Resource:
            - "*"
      - PolicyName: !Sub ${GlobalTag}-${Landscape}-waf-toggle-logging-cloudwatch
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            # - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: "*"
      - PolicyName: !Sub ${GlobalTag}-${Landscape}-waf-toggle-logging-create-SLR
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - iam:CreateServiceLinkedRole
            Resource: "*"
        
      # ManagedPolicyArns:
      # - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole


  # DeletionPolicy & DependsOn cannot use conditions - must be a raw string. Therefore you have to move the conditional
  # up to the resource Condition attribute and create one of two resource sets depending on your deletion policy preference.

  # A) Retain logs after lambda that created them is deleted.
  LambdaLogsGroupRetain:
    Type: AWS::Logs::LogGroup
    Condition: retainLogs
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${GlobalTag}-${Landscape}-waf-logging-toggler
      RetentionInDays: 30
  ToggleWafLoggingLambdaA:
    Type: AWS::Lambda::Function
    Condition: retainLogs
    DependsOn: LambdaLogsGroupRetain
    Properties:
      Description: !Sub 
      - Empty all contents from a specified s3 bucket (LogGroup - ${loggroup}).
      - loggroup: !GetAtt LambdaLogsGroupRetain.Arn
      Handler: toggle_waf_logging.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs12.x
      Timeout: 15  # 15 seconds
      FunctionName: !Sub ${GlobalTag}-${Landscape}-waf-logging-toggler
      Code:
        S3Bucket: !Ref TemplateBucketName
        S3Key: cloudformation/kuali_lambda/toggle_waf_logging.zip

  # Or...

  # B) Delete logs along with the lambda that created them.
  LambdaLogsGroupDelete:
    Type: AWS::Logs::LogGroup
    Condition: deleteLogs
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${GlobalTag}-${Landscape}-waf-logging-toggler
      RetentionInDays: 30
  ToggleWafLoggingLambdaB:
    Type: AWS::Lambda::Function
    Condition: deleteLogs
    DependsOn: LambdaLogsGroupDelete
    Properties:
      Description: !Sub 
      - Empty all contents from a specified s3 bucket (LogGroup - ${loggroup}).
      - loggroup: !GetAtt LambdaLogsGroupDelete.Arn
      Handler: toggle_waf_logging.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs12.x
      Timeout: 15  # 15 seconds
      FunctionName: !Sub ${GlobalTag}-${Landscape}-waf-logging-toggler
      Code:
        S3Bucket: !Ref TemplateBucketName
        S3Key: cloudformation/kuali_lambda/toggle_waf_logging.zip

Outputs:

  LambdaArn:
    Value:
      !If
        - deleteLogs
        - !GetAtt ToggleWafLoggingLambdaB.Arn
        - !GetAtt ToggleWafLoggingLambdaA.Arn
