AWSTemplateFormatVersion: '2010-09-09'

# Upload all the kuali-related database/service users/passwords into the secrets manager service.
#
# NOTE: It is better for these secrets to be created in their own stack and not in the stack where they
# will be consumed (like an rds stack) because the dynamically generated secrets will be renewed when 
# updating those stacks and we want to avoid that and only change secrets with stack updates when that 
# is our explicit purpose.
#
# IMPORTANT: (From: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html)
# Updating a secret in Secrets Manager does not automatically update the secret in CloudFormation. In order for 
# CloudFormation to update a secretsmanager dynamic reference, you must perform a stack update that updates the 
# resource containing the dynamic reference, either by updating the resource property that contains the secretsmanager 
# dynamic reference, or updating another of the resource's properties.

# For example, suppose in your template you specify the MasterPassword property of an AWS::RDS::DBInstance resource 
# to be a secretsmanager dynamic reference, and then create a stack from the template. You later update that secret's 
# value in Secret Manager, but do not update the AWS::RDS::DBInstance resource in your template. In this case, even if 
# you perform a stack update, the secret value in the MasterPassword property is not updated, and remains the previous 
# secret value.

# To manage updating the secret in your template, consider using version-id to specify the version of your secret. 
# Then, when you update to the next version, update the version-id in your template and perform a stack update. 
# For example, specifying the following segments would retrieve the password value for the version of the MySecret 
# secret with the version ID of EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE:

# Â  '{{resolve:secretsmanager:MySecret:SecretString:password:EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE}}'

#
# Documentation:
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_SecretsManager.html
# https://www.1strategy.com/blog/2019/02/28/aws-parameter-store-vs-aws-secrets-manager/
#
# AWS CLI - Get password like this:
# aws --profile [your.profile] secretsmanager get-secret-value \
#   --secret-id kuali/sb/kuali-oracle-rds-admin-password \
#   --output text \
#   --query '{SecretString:SecretString}' \
#   | jq '.MasterUserPassword' \
#   | sed 's/"//g'

Parameters:

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention.
    Default: kuali-secrets

  Landscape:
    Description: Specify a name for your landscape
    Type: String
    AllowedPattern: "[a-zA-Z\\d]{1,12}"
    ConstraintDescription: Up to 12 letters and/or numbers

  Service:
    Description: Service catalog name
    Type: String
    Default: research-administration

  Function:
    Description: The Function within the Service
    Type: String
    Default: kuali

  # ---------------- RDS ORACLE KUALI DB FOR KCOEUS USER ----------------
  RdsAppUsername:
    Description: The kc application username
    Type: String
    Default: KCOEUS

  RdsAppPassword:
    Description: The kc application users password
    Type: String
    NoEcho: true
    Default: empty

  # ---------------- LEGACY ORACLE KUALI DB FOR KCOEUS USER ----------------
  Ec2DbAppUsername:
    Description: The kc application username
    Type: String
    Default: KCOEUS

  Ec2DbAppPassword:
    Description: The kc application users password
    Type: String
    NoEcho: true
    Default: empty

  Ec2DbHost:
    Description: The kc database host
    Type: String
    Default: empty

  Ec2DbSid:
    Description: The kc database name
    Type: String
    Default: Kuali

  Ec2DbPort:
    Description: The kc database port
    Type: Number
    Default: 1521

  # ---------------- DATA MIGRATION SERVICE USER ----------------
  Ec2DbDmsUsername:
    Description: The user assumed by the aws data migration service for accessing the kc database
    Type: String
    Default: AWS_DMS

  Ec2DbDmsPassword:
    Description: The dms users password
    Type: String
    NoEcho: true
    Default: empty

  # ---------------- SCHEMA CONVERSION TOOL USER ----------------
  Ec2DbSctUsername:
    Description: The user assumed by the aws schema conversion tool for accessing the kc database
    Type: String
    Default: AWS_SCHEMA_CONV

  Ec2DbSctPassword:
    Description: The sct users password
    Type: String
    NoEcho: true
    Default: empty

Conditions:
  RdsAppPasswordProvided: !Not [!Equals [!Ref RdsAppPassword, empty]]
  Ec2DbAppPasswordProvided: !Not [!Equals [!Ref Ec2DbAppPassword, empty]]
  Ec2DbDmsPasswordProvided: !Not [!Equals [!Ref Ec2DbDmsPassword, empty]]
  Ec2DbSctPasswordProvided: !Not [!Equals [!Ref Ec2DbSctPassword, empty]]

Resources:

  # The easiest way to cause the password to renew as part of a stack update is to change the PasswordLength.
  # For example, toggle between a length of 14 and 15.
  MasterKualiRdsDbMasterUserPassword:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Name: !Sub kuali/${Landscape}/kuali-oracle-rds-admin-password
      Description: !Sub The oracle master user password for the kc rds ${Landscape} database.
      GenerateSecretString: 
        ExcludeCharacters: '"@/\|'
        # ExcludePunctuation: false ! " # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \ ] ^ _ ` { | } ~
        PasswordLength: 14
        SecretStringTemplate: '{"MasterUsername": "admin"}'
        GenerateStringKey: "MasterUserPassword"
      # KmsKeyId: String
      # SecretString: String
      Tags: 
        - Key: Name
          Value: !Sub kuali/${Landscape}/kuali-oracle-rds-admin-password
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function
        - Key: Landscape
          Value: !Ref Landscape


  # The easiest way to cause the password to renew as part of a stack update is to change the PasswordLength.
  # For example, toggle between a length of 10 and 11.
  KualiRdsDbAppUserPassword:
    Type: AWS::SecretsManager::Secret
    Condition: RdsAppPasswordProvided
    Properties: 
      Name: !Sub kuali/${Landscape}/kuali-oracle-rds-app-password
      Description: !Sub |
        The application user (probably KCOEUS) and password for the kc rds ${Landscape} database
      SecretString: !Sub |
        {
          "username": "${RdsAppUsername}", 
          "password": "${RdsAppPassword}"
        }
      Tags: 
        - Key: Name
          Value: !Sub kuali/${Landscape}/kuali-oracle-rds-app-password
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function
        - Key: Landscape
          Value: !Ref Landscape

  KualiEc2DbAppUserPassword:
    Type: AWS::SecretsManager::Secret
    Condition: Ec2DbAppPasswordProvided
    Properties: 
      Name: !Sub kuali/${Landscape}/kuali-oracle-ec2-app-password
      Description: !Sub |
        The application user (probably KCOEUS) and password for the kc ec2 ${Landscape} database
      SecretString: !Sub |
        {
          "username": "${Ec2DbAppUsername}", 
          "password": "${Ec2DbAppPassword}",
          "host": "${Ec2DbHost}",
          "sid": "${Ec2DbSid}",
          "port": "${Ec2DbPort}"
        }
      Tags: 
        - Key: Name
          Value: !Sub kuali/${Landscape}/kuali-oracle-ec2-app-password
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function
        - Key: Landscape
          Value: !Ref Landscape

  KualiEc2DbSctUserPassword:
    Type: AWS::SecretsManager::Secret
    Condition: Ec2DbSctPasswordProvided
    Properties: 
      Name: !Sub kuali/${Landscape}/kuali-oracle-ec2-sct-password
      Description: !Sub |
        The user (probably AWS_SCHEMA_CONV) assumed by the aws schema conversion tool 
        for access to the kc ec2 ${Landscape} database
      SecretString: !Sub |
        {
          "username": "${Ec2DbSctUsername}", 
          "password": "${Ec2DbSctPassword}",
          "host": "${Ec2DbHost}",
          "sid": "${Ec2DbSid}",
          "port": "${Ec2DbPort}"
        }
      Tags: 
        - Key: Name
          Value: !Sub kuali/${Landscape}/kuali-oracle-ec2-sct-password
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function
        - Key: Landscape
          Value: !Ref Landscape

  KualiEc2DbDmsUserPassword:
    Type: AWS::SecretsManager::Secret
    Condition: Ec2DbDmsPasswordProvided
    Properties: 
      Name: !Sub kuali/${Landscape}/kuali-oracle-ec2-dms-password
      Description: !Sub |
        The user (probably AWS_DMS) assumed by the aws data migration service for 
        access to the kc ec2 ${Landscape} database
      SecretString: !Sub |
        {
          "username": "${Ec2DbDmsUsername}", 
          "password": "${Ec2DbDmsPassword}",
          "host": "${Ec2DbHost}",
          "sid": "${Ec2DbSid}",
          "port": "${Ec2DbPort}"
        }
      Tags: 
        - Key: Name
          Value: !Sub kuali/${Landscape}/kuali-oracle-ec2-dms-password
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function
        - Key: Landscape
          Value: !Ref Landscape
