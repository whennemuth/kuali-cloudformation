AWSTemplateFormatVersion: 2010-09-09


Description: >
  Deploys 2 instances behind a load balancer running a dockerized kuali research application suite.
  Assumes pre-existence of 2 BU campus private application subnets and 2 BU public gateway subnets.

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: Labelling
        Parameters: 
          - GlobalTag
          - Landscape
      - Label:
          default: Network/Load-balancing
        Parameters:
          - VpcId
          - CampusSubnet1
          - PublicSubnet1
          - CampusSubnet2
          - PublicSubnet2
          - CertificateArn
          - EnableWAF
          - HostedZoneName
      - Label: 
          default: "Amazon EC2 Configuration"
        Parameters: 
          - InstanceType
          - BucketName
      - Label: 
          default: "Kuali Services / Docker images"
        Parameters: 
          - CoreImage
          - KcImage
          - PortalImage
          - PdfImage
          - PdfS3BucketName
      - Label: 
          default: "Logging"
        Parameters: 
          - EnableNewRelicAPM
          - EnableNewRelicInfrastructure

Parameters:

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention.
    Default: kuali-ec2-alb

  Landscape:
    Description: Specify which landscape to build for.
    Type: String
    AllowedValues:
    - sb
    - ci
    - qa
    - stg
    - prod
    ConstraintDescription: >
      This parameter is restricted to the following values: sb, ci, qa, stg, prod
    Default: sb

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The id of the vpc to deploy to.
    
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The first public subnet for the load balancer.

  CampusSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The first private subnet for one of the ec2 instances.

  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The second public subnet for the load balancer.

  CampusSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The second private subnet for one of the ec2 instances.
        
  InstanceType:
    Type: String
    Description: What type of EC2 instance should be used for hosting?
    AllowedValues:
    - t2.large
    - t2.xlarge
    - t3.large
    - t3.xlarge
    - m4.large
    - m4.xlarge
    - m5.large
    - m5.xlarge
    - c5.large
    - c5.xlarge
    ConstraintDescription: Specified instance type is not within selection list.
    Default: m4.large
  
  BucketName:
    Type: String
    Description: The S3 bucket kuali research cloudformation templates, config files, keys, etc. are stored
    Default: kuali-conf

  PdfS3BucketName:
    Type: String
    Description: The name of the s3 bucket the pdf service is to use.

  CoreImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-core:2001.0040'

  KcImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-coeus:2001.0040'

  PortalImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-portal:2001.0040'

  PdfImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-research-pdf:2002.0003'

  CertificateArn:
    Type: String
    Description: The amazon resource name of a certificate that has already been put in ACM

  EC2KeypairName:
    # Type: AWS::EC2::KeyPair::KeyName
    Type: String
    Description: The keypair for ssh use against the ec2 instance
    Default: empty

  EnableNewRelicAPM:
    Type: String
    Description: Is newrelic APM to be enabled for this landscape?
    Default: "false"
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.

  EnableNewRelicInfrastructure:
    Type: String
    Description: Is newrelic infrastructure (with logging) to be enabled for this landscape?
    Default: "false"
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.

  EnableWAF:
    Type: String
    Description: Does the ALB traffic need to go through a WAF?
    Default: "true"
    AllowedValues:
    - "true"
    - "false"

  EnableALBLogging:
    Type: String
    Description: Does the ALB traffic need to go through a WAF?
    Default: "false"
    AllowedValues:
    - "true"
    - "false"

  MongoSubnetId:
    Type: String
    Description: Id of the private application subnet where a new mongo database ec2 instance is optionally created.
    Default: empty

  HostedZoneName:
    Type: String
    Description: If included, a DNS record will be created and registered with the specified HostedZone
    Default: empty

Conditions:
  CreateWAF: !Equals [!Ref EnableWAF, 'true']
  CreateDnsRecord: !Not [!Equals [!Ref HostedZoneName, empty]]
  CreateMongoEc2Instance: !Not [!Equals [!Ref MongoSubnetId, empty]]
  CreateAlbLogsBuckets: !Or [!Equals [!Ref EnableALBLogging, 'true' ], Condition: CreateWAF]
  UseKeypair: !Not [!Equals [!Ref EC2KeypairName, empty]]


Resources:
      
  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_ec2_alb/security-group.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        VpcId:
          !Ref VpcId

  ALBWAFLogs:
    Type: AWS::CloudFormation::Stack
    Condition: CreateAlbLogsBuckets
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_alb/logs.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape        

  WAF:
    Type: AWS::CloudFormation::Stack
    Condition: CreateWAF
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_waf/waf.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        AlbLogsBucketName:
          !If
            - CreateAlbLogsBuckets
            - !GetAtt ALBWAFLogs.Outputs.ALBLogBucketName
            - !Ref AWS::NoValue
        GlueAccessLogsDatabaseName:
          !If
            - CreateAlbLogsBuckets
            - !GetAtt ALBWAFLogs.Outputs.GlueAccessLogsDatabaseName
            - !Ref AWS::NoValue
    
  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_alb/alb.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        VpcId:
          !Ref VpcId
        Subnet1: 
          !Ref PublicSubnet1
        Subnet2: 
          !Ref PublicSubnet2
        SecurityGroup: 
          !GetAtt SecurityGroups.Outputs.ALBSecurityGroup
        CertificateArn:
          !Ref CertificateArn
        WafWebAclArn:
          !If
            - CreateWAF
            - !GetAtt WAF.Outputs.WafWebAclArn
            - !Ref AWS::NoValue
        HostedZoneName:
          !If
            - CreateDnsRecord
            - !Ref HostedZoneName
            - !Ref AWS::NoValue
        AlbLogsBucketName:
          !If
            - CreateAlbLogsBuckets
            - !GetAtt ALBWAFLogs.Outputs.ALBLogBucketName
            - !Ref AWS::NoValue

  # See notes in cleanup.yaml
  AlbWafCleanupLambda:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_lambda/cleanup.yaml
      Parameters:
        GlobalTag: !Ref GlobalTag
        Landscape: !Ref Landscape
        BucketName: !Ref BucketName
        AlbArn: !GetAtt ALB.Outputs.LoadBalancer
        WafArn: !If [ CreateWAF, !GetAtt WAF.Outputs.WafWebAclArn, !Ref AWS::NoValue ]
        AlbLogsBucketName: !If [ CreateAlbLogsBuckets, !GetAtt ALBWAFLogs.Outputs.ALBLogBucketName, !Ref AWS::NoValue ]
        WafLogsBucketName: !If [ CreateWAF, !GetAtt WAF.Outputs.WafLogBucketName, !Ref AWS::NoValue ]
        AthenaLogsBucketName: !If [ CreateWAF, !GetAtt ALBWAFLogs.Outputs.AthenaLogBucketName, !Ref AWS::NoValue ]
        
  CleanupBeforeDelete:
    Type: Custom::Functions
    Properties:
      ServiceToken: !GetAtt AlbWafCleanupLambda.Outputs.LambdaArn
      # Omiiting parameters is equivalent to specifying the most inclusive cleanup (both alb and waf logging is disabled an all 3 associated buckets are emptied)
      #
      # To limit logging disablement and bucket cleanup to the alb use:
      # resource: 'alb'
      #
      # To limit logging disablement and bucket cleanup to the waf use:
      # resource: 'waf'
      #
      # To only disable logging (alb and waf), but leave buckets alone use:
      # target: 'logging'
      # 
      # To only cleanup buckets (alb, waf, & athena), but leave logging enabled use:
      # target: 'bucket'
      # 
      # To only disable logging for the alb use:
      # resource 'alb'
      # target 'logging'
      # 
      # To only cleanup buckets for the waf use:
      # resource: 'waf'
      # target: 'bucket'
      # 
      # To only cleanup buckets for athena use:
      # resource 'athena'
      # target: 'bucket'
      #
      # etc...

  MongoDbInstance:
    Type: AWS::CloudFormation::Stack
    Condition: CreateMongoEc2Instance
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_mongo/mongo.yaml
      Parameters:
        GlobalTag:
          !Sub ${GlobalTag}-mongo
        Landscape:
          !Ref Landscape
        VpcId:
          !Ref VpcId
        ApplicationSecurityGroupId:
          !GetAtt SecurityGroups.Outputs.EC2SecurityGroupId
        MongoSubnet:
          !Ref MongoSubnetId
    
  Instance1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_ec2_alb/ec2.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        VpcId:
          !Ref VpcId
        SecurityGroupId:
          !GetAtt SecurityGroups.Outputs.EC2SecurityGroupId
        DNSName:
          !If 
            - CreateDnsRecord
            - !Ref HostedZoneName
            - !GetAtt ALB.Outputs.DNSName
        UsingRoute53: !If [ CreateDnsRecord, 'true', 'false' ]
        InstanceType:
          !Ref InstanceType
        CampusSubnet:
          !Ref CampusSubnet1
        MongoEc2Ip:
          !If
            - CreateMongoEc2Instance
            - !GetAtt MongoDbInstance.Outputs.PrivateIP
            - !Ref AWS::NoValue
        BucketName:
          !Ref BucketName
        PdfS3BucketName:
          !Ref PdfS3BucketName
        CoreImage:
          !Ref CoreImage
        KcImage:
          !Ref KcImage
        PortalImage:
          !Ref PortalImage
        PdfImage:
          !Ref PdfImage
        EC2KeypairName:
          !If 
            - UseKeypair
            - !Ref EC2KeypairName
            - !Ref AWS::NoValue
        EnableNewRelicAPM:
          !Ref EnableNewRelicAPM
        EnableNewRelicInfrastructure:
          !Ref EnableNewRelicInfrastructure

  Instance2:
    Type: AWS::CloudFormation::Stack
    DependsOn: Instance1
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_ec2_alb/ec2.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        VpcId:
          !Ref VpcId
        SecurityGroupId:
          !GetAtt SecurityGroups.Outputs.EC2SecurityGroupId
        DNSName:
          !If 
            - CreateDnsRecord
            - !Ref HostedZoneName
            - !GetAtt ALB.Outputs.DNSName
        UsingRoute53: !If [ CreateDnsRecord, 'true', 'false' ]
        CampusSubnet:
          !Ref CampusSubnet2
        MongoEc2Ip:
          !If
            - CreateMongoEc2Instance
            - !GetAtt MongoDbInstance.Outputs.PrivateIP
            - !Ref AWS::NoValue
        InstanceType:
          !Ref InstanceType
        BucketName:
          !Ref BucketName
        PdfS3BucketName: 
          !Ref PdfS3BucketName
        CoreImage:
          !Ref CoreImage
        KcImage:
          !Ref KcImage
        PortalImage:
          !Ref PortalImage
        PdfImage:
          !Ref PdfImage
        EC2KeypairName:
          !If 
            - UseKeypair
            - !Ref EC2KeypairName
            - !Ref AWS::NoValue
        EnableNewRelicAPM:
          !Ref EnableNewRelicAPM
        EnableNewRelicInfrastructure:
          !Ref EnableNewRelicInfrastructure
        InstanceProfile:
          !GetAtt Instance1.Outputs.EC2InstanceProfile
        InstanceRole:
          !GetAtt Instance1.Outputs.EC2Role
        EC2InstanceLogsGroupArn:
          !GetAtt Instance1.Outputs.EC2InstanceLogsGroupArn
            
  Services:
    Type: AWS::CloudFormation::Stack
    DependsOn: Instance2
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${BucketName}/cloudformation/kuali_ec2_alb/services.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        VpcId:
          !Ref VpcId
        Listener:
          !GetAtt ALB.Outputs.Listener
        InstanceId1:
          !GetAtt Instance1.Outputs.InstanceId
        InstanceId2:
          !GetAtt Instance2.Outputs.InstanceId
        PdfS3BucketName: 
          !Ref PdfS3BucketName


Outputs:

  KualiResearchUrl:
    Description: The URL endpoint for the kuali research home page
    Value:
      !Sub 
      - https://${domain}/kc
      - domain: !If 
        - CreateDnsRecord
        - !Ref HostedZoneName
        - !GetAtt ALB.Outputs.DNSName
    