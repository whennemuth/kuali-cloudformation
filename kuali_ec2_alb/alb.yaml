AWSTemplateFormatVersion: '2010-09-09'

# References:
# https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_ElasticLoadBalancingV2.html

Description: This template deploys an application load balancer that exposes the EC2 Instance (except for ssh access)

Parameters:

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention. If a nested stack,
      this will most likely be the name of the top-most stack.
    Default: kuali-ec2-alb

  Landscape:
    Description: Specify which landscape to build into the VPC
    Type: String
    AllowedValues:
    - sb
    - ci
    - qa
    - stg
    - prod
    ConstraintDescription: >
      This parameter is restricted to the following values: sb, ci, qa, stg, prod
    Default: sb

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The id of the vpc to deploy to.

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The security group to be applied to the application load balancer.

  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: One of the subnets the ALB routes traffic to.
      
  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: One of the subnets the ALB routes traffic to.

  CertificateArn:
    Type: String
    Description: The amazon resource name of a certificate that has already been put in IAM/ACM


Resources:

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Description: The load balancer used as reverse proxy for the kuali ec2 instance
    Properties:
      Name: 
        # Make this short enough so that the derived DNS name is under 64 characters"
        !Sub "${GlobalTag}-${Landscape}-ALB"
      Subnets:
      - !Ref Subnet1
      - !Ref Subnet2
      SecurityGroups:
      - !Ref SecurityGroup
      # LoadBalancerAttributes:
      # - Key: access_logs.s3.enabled
      #   Value: "true"
      # - Key: access_logs.s3.bucket
      #   Value: !Sub ${GlobalTag}-${Landscape}-alb-logs
      # - Key: access_logs.s3.prefix
      #   Value: alb
      Tags:
      - Key: Name
        Value: 
          !Sub "${GlobalTag}-${Landscape}-ALB"


  ################################################
  #                HTTP (PORT 80)
  ################################################
  TargetGroup80:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${GlobalTag}-${Landscape}-http-TG
      VpcId: !Ref VpcId
      Port: 80
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: 
          !Sub ${GlobalTag}-${Landscape}-http-TG
  Listener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - TargetGroupArn:
          # Arbitrarily using TargetGroupCore as default. Nothing actually makes 
          # it to that group over port 80 because the listener rule redirects to port 443
          !Ref TargetGroup80
        Type: forward
      LoadBalancerArn:
        !Ref ALB
      Port: 80
      Protocol: HTTP
  ListenerRule80:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Description: >
      When the cor-main institution provider type is switched from "kuali"
      to "saml" as the institution provider value, the shibboleth configuration will
      take over https redirection and this rule can be removed.
    Properties:
      ListenerArn:
        !Ref Listener80
      Priority: 1
      Actions:
      - Type: redirect
        # NOTE: Target groups do not apply if action type is redirect
        # TargetGroupArn:
        #   !Ref TargetGroup80
        RedirectConfig:
          Host: "#{host}"
          Path: "/#{path}"
          Port: 443
          Protocol: HTTPS
          Query: "#{query}"
          StatusCode: HTTP_301
      Conditions:
      - { Field: path-pattern, Values: [ "/*" ] }


  ################################################
  #                HTTPS (PORT 443)
  ################################################
  Listener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
      # WARNING!
      # For some reason cloudformation returns a "CertificateNotFound" error when the arn of a certificate uploaded to acm
      # is used to configure the listener for ssl. However, it has no problem with an arn of uploaded iam server certificates.  
      - CertificateArn:
          !Ref CertificateArn
      DefaultActions:
      - TargetGroupArn:
          # A target group is a mandatory parameter when creating a listener for an application load balancer.
          # So, to temporarily satisfy this requirement, "borrow" the http target group here for now.
          # This target group won't actually be used by this listener, instead a target group is created per-service
          # in the services template and each registered then with this listener. (Conflicting protocols don't seem to matter)
          !Ref TargetGroup80
        Type: forward
      LoadBalancerArn:
        !Ref ALB
      Port: 443
      Protocol: HTTPS


Outputs:

  LoadBalancerUrl:
    Description: This will be the url that the app is publicly addressable on
    Value: !GetAtt ALB.DNSName

  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref ALB

  Listener:
    Description: A reference to a port 80 listener
    Value: !Ref Listener443