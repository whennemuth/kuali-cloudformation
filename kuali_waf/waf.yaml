AWSTemplateFormatVersion: 2010-09-09

Description: >-
  Combines standard AWS reference WAF Stack with Amazon Kinesis Data Firehose to capture and stream its 
  data into a data lake built on Amazon S3 for analysis with tools like athena or redshift.
  Based on: https://github.com/aws-samples/aws-waf-sample

Parameters:

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention. If a nested stack,
      this will most likely be the name of the top-most stack.
    Default: kuali-waf
    
  Service:
    Description: Service catalog name
    Type: String
    Default: research-administration

  Function:
    Description: The Function within the Service
    Type: String
    Default: kuali

  Landscape:
    Description: Specify a name for your landscape
    Type: String
    AllowedPattern: "[a-zA-Z\\d]{1,12}"
    ConstraintDescription: Up to 12 letters and/or numbers
  
  TemplateBucketName:
    Type: String
    Description: The S3 bucket kuali research cloudformation templates, config files, keys, etc. are stored
    Default: kuali-conf

  AlbLogsBucketName:
    Type: String
    Description: The name of the s3 bucket the ALB will log activity to. This parmarameter will be used if WafWebAclArn has a value.

  GlueAccessLogsDatabaseName:
    Type: String
    Description: The name of the glue access logs database

  BucketEmptierLambdaArn:
    Type: String
    Description: >-
      The arn of the lambda function used to empty the s3 bucket of waf logging content 
      during a stack delete (s3 buckets cannot be deleted unless they are empty).
    Default: none

  RetainLambdaCleanupLogs:
    Type: String
    Description: Indicate if the logs produced by cleanup lambda functions should survive stack deletion.
    Default: "false"
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.

Conditions:
  EmptyBuckets: !Not [!Equals [!Ref BucketEmptierLambdaArn, empty]]


Resources:

  WAF:
    Type: AWS::CloudFormation::Stack
    Properties:
      # https://docs.aws.amazon.com/solutions/latest/aws-waf3-security-automations/welcome.html
      # https://github.com/awslabs/aws-waf-security-automations
      # TemplateURL: https://s3.amazonaws.com/solutions-reference/aws-waf-security-automations/latest/aws-waf-security-automations.template
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_waf/aws-waf-security-automations-custom.yaml
      Parameters:
        ActivateAWSManagedRulesParam: 'yes'
        ActivateScannersProbesProtectionParam: 'yes - AWS Lambda log parser'
        AppAccessLogBucket: !Ref AlbLogsBucketName
        EndpointType: 'ALB'
        Landscape: !Ref Landscape
        GlobalTag: !Ref GlobalTag
        TemplateBucketName: !Ref TemplateBucketName
        Service: !Ref Service
        Function: !Ref Function

  WafLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${GlobalTag}-${Landscape}-waf
      Tags:
        - Key: Name
          Value: !Sub ${GlobalTag}-${Landscape}-waf
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function
        - Key: Landscape
          Value: !Ref Landscape
    DeletionPolicy: Delete
      
  FirehoseWAFLogsDeliveryStreamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: firehose.amazonaws.com
          Action: sts:AssumeRole
          Condition:
            StringEquals:
              sts:ExternalId: !Ref AWS::AccountId
      Policies:
      - PolicyName: S3Access
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - s3:AbortMultipartUpload
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:PutObject
              Resource:
                - !Sub 'arn:aws:s3:::${WafLogBucket}'
                - !Sub 'arn:aws:s3:::${WafLogBucket}/*'
      - PolicyName: KinesisAccess
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - kinesis:DescribeStream
                - kinesis:GetShardIterator
                - kinesis:GetRecords
              Resource:
                - !Sub arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/aws-waf-logs-${GlobalTag}-${Landscape}
      - PolicyName: CloudWatchAccess
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - logs:PutLogEvents
              Resource:
                - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/aws-waf-logs-${GlobalTag}-${Landscape}:*
    Metadata:
      cfn_nag:
        rules_to_suppress:
          -
            id: W11
            reason: "S3Access restricted to WafLogBucket and CloudWatchAccess to DeliveryStreamName."

  FirehoseWAFLogsDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub aws-waf-logs-${GlobalTag}-${Landscape}
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt "WafLogBucket.Arn"
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 5
        CompressionFormat: GZIP
        Prefix: 'AWSLogs/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        ErrorOutputPrefix: 'AWSErrorLogs/result=!{firehose:error-output-type}/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        RoleARN: !GetAtt FirehoseWAFLogsDeliveryStreamRole.Arn
      Tags:
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function
        - Key: Landscape
          Value: !Ref Landscape

  GlueWafAccessLogsTable:
    Type: AWS::Glue::Table
    Properties:
      DatabaseName: !Ref GlueAccessLogsDatabaseName
      CatalogId: !Ref AWS::AccountId
      TableInput:
        Name: waf_access_logs
        Parameters: {"EXTERNAL": "TRUE"}
        # PartitionKeys:
        #   - Name: year
        #     Type: int
        #   - Name: month
        #     Type: int
        #   - Name: day
        #     Type: int
        #   - Name: hour
        #     Type: int
        StorageDescriptor:
          Location: !Sub s3://${WafLogBucket}/AWSLogs/
          InputFormat: "org.apache.hadoop.mapred.TextInputFormat"
          OutputFormat: "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"
          SerdeInfo:
            Parameters: {
              "paths": "action,formatVersion,httpRequest,httpSourceId,httpSourceName,nonTerminatingMatchingRules,rateBasedRuleList,ruleGroupList,terminatingRuleId,terminatingRuleType,timestamp,webaclId"
            }
            SerializationLibrary: "org.openx.data.jsonserde.JsonSerDe"
          Compressed : true
          StoredAsSubDirectories: false
          Columns:
            - Name: timestamp
              Type: bigint
            - Name: formatversion
              Type: int
            - Name: webaclid
              Type: string
            - Name: terminatingruleid
              Type: string
            - Name: terminatingruletype
              Type: string
            - Name: action
              Type: string
            - Name: httpsourcename
              Type: string
            - Name: httpsourceid
              Type: string
            - Name: rulegrouplist
              Type: array<string>
            - Name: ratebasedrulelist
              Type: array<string>
            - Name: nonterminatingmatchingrules
              Type: array<string>
            - Name: httprequest
              Type: struct<clientip:string,country:string,headers:array<struct<name:string,value:string>>,uri:string,args:string,httpversion:string,httpmethod:string,requestid:string>

  ToggleWafLoggingLambda:
    Type: AWS::CloudFormation::Stack
    DependsOn: WAF
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_lambda/toggle_waf_logging.yaml
      Parameters:
        GlobalTag: !Ref GlobalTag
        Landscape: !Ref Landscape
        TemplateBucketName: !Ref TemplateBucketName
        Service: !Ref Service
        Function: !Ref Function
        RetainLogs: !Ref RetainLambdaCleanupLogs

  # The lambda backing this custom resource will detect if a stack deletion is in progress and only then the will operate.
  # The function of this lambda is to empty the s3 bucket of waf logs so that cloudformation will succeed in deleting it.
  EmptyWafLoggingBucket:
    Type: Custom::Functions
    DependsOn: ToggleWafLoggingLambda
    Condition: EmptyBuckets
    Properties:
      ServiceToken: !Ref BucketEmptierLambdaArn
      BucketName: !Ref WafLogBucket
      MaxKeys: 50 # Indicates how many s3 bucket items deleted at a time until the bucket is empty

  # The function of this lambda is to create a logging configuration for the waf so that it writes out activity to an s3 bucket. It does this
  # during stack creation, but it will do the reverse and remove this logging configuration during a stack deletion to halt incoming
  # content while EmptyWafLoggingBucket does its work.
  ToggleWafLogging:
    Type: Custom::Functions
    DependsOn: EmptyWafLoggingBucket
    Properties:
      ServiceToken: !GetAtt ToggleWafLoggingLambda.Outputs.LambdaArn
      WebAclArn: !GetAtt WAF.Outputs.WAFWebACLArn
      FirehoseArn: !GetAtt FirehoseWAFLogsDeliveryStream.Arn


Outputs:

  WafWebAclArn:
    Description: The ARN for the WAF Web ACL. Will be referred to by the ALB
    Value: !GetAtt WAF.Outputs.WAFWebACLArn
              
  WafLoggingToggleResult:
    Description: Indicates success or failure of the lambda in enabling logging for the waf.
    Value: !GetAtt ToggleWafLogging.Reply

  WafLogBucketName:
    Description: The name of the s3 bucket waf activity will get logged to.
    Value: !Ref WafLogBucket

  FirehoseDeliveryStreamArn:
    Description: The arn of the firehose delivery stream.
    Value: !GetAtt FirehoseWAFLogsDeliveryStream.Arn