---
AWSTemplateFormatVersion: '2010-09-09'


Description: >
  This template deploys an application load balancer that exposes the ECS
  services. It is assumed this is a nested template whose output is consumed by other
  nested templates.


Parameters:

  Landscape:
    Description: Specify which landscape to build into the VPC
    Type: String
    AllowedValues:
    - sb
    - ci
    - qa
    - stg
    - prod
    ConstraintDescription: 'This parameter is restricted to the following values:
      sb, ci, qa, stg, prod'
    Default: sb

  GlobalPrefix:
    Type: String
    Description: >
      A common value that all resources in this template will prefix to
      their name to establish a bundling through naming convention. If a nested stack,
      this will most likely be the name of the top-most stack.
    Default: ECS-test

  vpcid:
    Type: AWS::EC2::VPC::Id
    Description: The id of the VPC the application load balancer is to be deployed to.

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The subnets the application load balancer routes traffic to.

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The security group to be applied to the application load balancer.


# https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html#application-load-balancer-components
Resources:

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Description: The load balancer for applications running in our private subnets
    Properties:
      Name:
        !Join [ '', [ !Ref GlobalPrefix, "-alb" ] ]
      Subnets: 
        !Ref Subnets
      SecurityGroups:
      - !Ref SecurityGroup
      Tags:
      - Key: Name
        Value:
          !Join [ '', [ !Ref GlobalPrefix, "-alb" ] ]

  Default80TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Description: Since a target group is a mandatory parameter for an application
      load balancer, a default target group is included here. It's just a dummy target
      group - the actual target group(s) are established in the service template(s).
    Properties:
      Name:
        !Join [ '', [ !Ref GlobalPrefix, "-default-80-target-group" ] ] 
      Port: 80
      Protocol: HTTP
      VpcId:
        !Ref vpcid
  Listener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: Default80TargetGroup
    Properties:
      DefaultActions:
      - TargetGroupArn:
          !Ref Default80TargetGroup
        Type: forward
      LoadBalancerArn:
        !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  SSLCert:
    Type: AWS::CertificateManager::Certificate
    DependsOn: LoadBalancer
    Properties:
      DomainName:
        !GetAtt LoadBalancer.DNSName
      DomainValidationOptions:
      - DomainName:
          !GetAtt LoadBalancer.DNSName
        ValidationDomain:
          !GetAtt LoadBalancer.DNSName
      Tags:
      - Key: Name
        Value: 
          !Sub "${GlobalPrefix}-${Landscape}.CERT"
  ListenerCert:
    Type: AWS::ElasticLoadBalancingV2::ListenerCertificate
    DependsOn: SSLCert
    Properties: 
      Certificates: 
      - Certificate:
          CertificateArn: !Ref SSLCert
      ListenerArn: String
      Tags:
      - Key: Name
        Value: 
          !Sub "${GlobalPrefix}-${Landscape}.LISTENER.CERT"
  Default443TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Description: Since a target group is a mandatory parameter for an application
      load balancer, a default target group is included here. It's just a dummy target
      group - the actual target group(s) are established in the service template(s).
    Properties:
      Name:
        !Join [ '', [ !Ref GlobalPrefix, "-default-443-target-group" ] ] 
      Port: 443
      Protocol: HTTPS
      VpcId:
        !Ref vpcid
  Listener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
    - LoadBalancer
    - ListenerCert
    - Default443TargetGroup
    Properties:
      Certificates:
      - CertificateArn:
          !Ref ListenerCert
      DefaultActions:
      - TargetGroupArn:
          !Ref Default443TargetGroup
        Type: forward
      LoadBalancerArn:
        !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS

Outputs:
  LoadBalancer:
    Value:
      !Ref LoadBalancer
    Description: A reference to the ALB
  LoadBalancerUrl:
    Description: The URL of the ALB
    Value:
      !GetAtt LoadBalancer.DNSName
  Listener80:
    Value:
      !Ref Listener80
    Description: A reference to a port 80 Listener
  Listener443:
    Value:
      !Ref Listener443
    Description: A reference to a port 443 Listener
