AWSTemplateFormatVersion: 2010-09-09

Description: This service contains one task that runs the kuali research application


Parameters:

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention. If a nested stack,
      this will most likely be the name of the top-most stack.
    Default: kuali-ecs

  Landscape:
    Description: Specify a name for your landscape
    Type: String
    AllowedPattern: "[a-zA-Z\\d]{1,12}"
    ConstraintDescription: Up to 12 letters and/or numbers

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The id of the vpc this is a subnet of.

  ClusterId:
    Type: String
    Description: Please provide the ECS Cluster ID that this service should run on

  DesiredCount:
    Type: Number
    Description: How many instances of the kuali research task should we run across our cluster?
    AllowedValues: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
    ConstraintDescription: Cluster size is limited between 1 and 10 instances.
    Default: 2

  MaxCount:
    Type: Number
    Description: Maximum number of instances of the kuali research task we can run across our cluster
    AllowedValues: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
    ConstraintDescription: Cluster size is limited between 1 and 10 instances.
    Default: 2

  Listener:
    Description: The Application Load Balancer listener to register with
    Type: String

  ECSContainerInstanceAutoScalingRoleARN:
    Type: String
    Description: The ECS service auto scaling role ARN.

  KcImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-coeus:2001.0040'

  EnableNewRelicAPM:
    Type: String
    Description: Is newrelic APM to be enabled for this landscape?
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.
    Default: "false"


Conditions:
  IsProd: !Equals [!Ref Landscape, prod]


Resources:

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Description: Definition for the Task that runs the kuali research application for kuali-research
    Properties:
      Family: research
      NetworkMode: bridge
      RequiresCompatibilities:
      - EC2
      Volumes:
      - Name: KC-Config-Bind-Mount
        Host:
          SourcePath: /opt/kuali/s3/kc
      - Name: KC-Printing-Bind-Mount
        Host:
          SourcePath: /opt/kuali/kc_printing
      - Name: KC-Javamelody-Bind-Mount
        Host:
          SourcePath: /opt/kuali/kc_javamelody
      - Name: KC-attachments-Bind-Mount
        Host: 
          SourcePath: /opt/kuali/kc_attachments
      - Name: KC-tomcat-logs-Bind-Mount
        Host:
          SourcePath: /opt/kuali/kc_tomcat_logs
      - Name: KC-newrelic-logs-Bind-Mount
        Host:
          SourcePath: /opt/kuali/kc_newrelic_logs
      ContainerDefinitions:
      - Name: kuali-research
        User: root
        Essential: true
        Image: !Ref KcImage
        MemoryReservation: 4500
        # Environment:
        # - Name: LANDSCAPE
        #   Value:
        #     !Ref Landscape
        EnvironmentFiles:
        - /opt/kuali/s3/kc/kc.env
        PortMappings:
        - HostPort: 0
          ContainerPort: 8080
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group:
              !Ref LogGroup
            awslogs-region:
              !Ref AWS::Region
            awslogs-stream-prefix:
              !Ref AWS::StackName
            # awslogs-create-group: false
        MountPoints:
        - SourceVolume: KC-Config-Bind-Mount
          ContainerPath: /opt/kuali/main/config
          ReadOnly: false
        - SourceVolume: KC-Printing-Bind-Mount
          ContainerPath: /opt/kuali/logs/printing/logs
          ReadOnly: false
        - SourceVolume: KC-Javamelody-Bind-Mount
          ContainerPath: /var/log/javamelody
          ReadOnly: false
        - SourceVolume: KC-attachments-Bind-Mount
          ContainerPath: /opt/tomcat/temp/dev/attachments
          ReadOnly: false
        - SourceVolume: KC-tomcat-logs-Bind-Mount
          ContainerPath: /opt/tomcat/logs
          ReadOnly: false
        - SourceVolume: KC-newrelic-logs-Bind-Mount
          ContainerPath: /var/log/newrelic
          ReadOnly: false

  LogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName:
        !Sub ${GlobalTag}-${Landscape}-kc
      RetentionInDays: !If [ IsProd, 365, 30 ]

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRuleKC
    Properties:
      ServiceName:
        kuali-research
      Cluster:
        !Ref ClusterId
      DeploymentController:
        Type: ECS
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 50
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      PlacementStrategies:
        - Field: instanceId
          Type: spread
      Role:
        !Ref ServiceRole
      DesiredCount:
        !Ref DesiredCount
      TaskDefinition:
        !Ref TaskDefinition
      # Wait 6 minutes before counting health checks - kuali-research takes time to come up
      HealthCheckGracePeriodSeconds: 360
      # How this service traces back to its load balancer: Service > TargetGroup > ListenerRule > Listener > ALB
      LoadBalancers:
      - ContainerName: kuali-research
        ContainerPort: 8080
        TargetGroupArn:
          !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name:
        !Sub ${GlobalTag}-${Landscape}-kc
      VpcId: !Ref VpcId
      Port: 8080
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 40
      HealthCheckPath: "/kc/healthCheck/"
      # HealthCheckPath: "/index.jsp"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      HealthyThresholdCount: 2
      TargetGroupAttributes:
      - Key: stickiness.enabled
        Value: true
      - Key: stickiness.type
        Value: lb_cookie
      - Key: stickiness.lb_cookie.duration_seconds
        Value: 86400
      - Key: deregistration_delay.timeout_seconds
        Value: 300
      - Key: slow_start.duration_seconds
        Value: 0
      Tags:
      - Key: Name
        Value: 
          !Sub ${GlobalTag}-${Landscape}-kc-targetgroup

  ListenerRuleKcDefault:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    DependsOn: TargetGroup
    Description: >
      If the user navigates to the website with no path, we want them presented with the research app
      as a default, not the portal selection view as would otherwise be presented.
    Properties:
      ListenerArn:
        !Ref Listener
      Priority: 4
      Actions:
      - Type: redirect
        RedirectConfig:
          Host: "#{host}"
          Path: "/kc"
          Port: 443
          Protocol: HTTPS
          Query: "#{query}"
          StatusCode: HTTP_301
      Conditions:
      - { Field: path-pattern, Values: [ "/" ] }

  ListenerRuleKC:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    DependsOn: TargetGroup
    Properties:
      ListenerArn:
        !Ref Listener
      Priority: 5
      Actions:
      - TargetGroupArn:
          !Ref TargetGroup
        Type: forward
      Conditions:
      # - { Field: path-pattern, Values: [ "/kc", "/kc/*", "/index.jsp" ] }
      - { Field: path-pattern, Values: [ "/kc", "/kc/*" ] }

  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
       !Sub ${GlobalTag}-${Landscape}-service-kc
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          !Sub ${GlobalTag}-${Landscape}-host-policy-kc
        PolicyDocument:
          Statement:
          - Effect: Allow
            Resource: "*"
            Action:
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:Describe*
            - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
            - elasticloadbalancing:Describe*
            - elasticloadbalancing:RegisterInstancesWithLoadBalancer
            - elasticloadbalancing:DeregisterTargets
            - elasticloadbalancing:DescribeTargetGroups
            - elasticloadbalancing:DescribeTargetHealth
            - elasticloadbalancing:RegisterTargets

  ServiceScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      ResourceId:
        !Join [ "/", [ service, !Ref ClusterId, !GetAtt Service.Name ] ]
      RoleARN:
        !Ref ECSContainerInstanceAutoScalingRoleARN
      MaxCapacity:
        !Ref MaxCount
      MinCapacity:
        !Ref DesiredCount
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ServiceScaleOutPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName:
       !Sub ${GlobalTag}-${Landscape}-target-scale-in-policy-kc
      PolicyType: StepScaling
      ScalingTargetId:
        !Ref ServiceScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 3000
        MetricAggregationType: Average
        StepAdjustments:
        - MetricIntervalLowerBound: 0
          ScalingAdjustment: 1

  ServiceScaleInPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName:
       !Sub ${GlobalTag}-${Landscape}-target-scale-out-policy-kc
      PolicyType: StepScaling
      ScalingTargetId:
        !Ref ServiceScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 3000
        MetricAggregationType: Average
        StepAdjustments:
        - MetricIntervalUpperBound: 0
          ScalingAdjustment: -1

  CPUScaleOutAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
       !Sub ${GlobalTag}-${Landscape}-scale-out-alarm-kc
      AlarmDescription: Alarm triggered when average cpu utilization across the service exceeds 85%
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Dimensions:
      - Name: ClusterName
        Value:
          !Ref ClusterId
      - Name: ServiceName
        Value:
          !GetAtt Service.Name
      Statistic: Average
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 3
      Period: 60
      Threshold: 85
      AlarmActions:
      - !Ref ServiceScaleOutPolicy

  CUPScaleInAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
       !Sub ${GlobalTag}-${Landscape}-scale-in-alarm-kc
      AlarmDescription: Alarm triggered when average cpu utilization across the service falls below 85%
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Dimensions:
      - Name: ClusterName
        Value:
          !Ref ClusterId
      - Name: ServiceName
        Value:
          !GetAtt Service.Name
      Statistic: Average
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 6
      Period: 60
      Threshold: 70
      AlarmActions:
      - !Ref ServiceScaleInPolicy

Outputs: {}
