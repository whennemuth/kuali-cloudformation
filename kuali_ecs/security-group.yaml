Description: Establishes an ALB and an EC2 security group.

Parameters:

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention. If a nested stack,
      this will most likely be the name of the top-most stack.
    Default: kuali-ecs

  Landscape:
    Description: Specify which landscape to build for.
    Type: String
    AllowedValues:
    - sb
    - ci
    - qa
    - stg
    - prod
    ConstraintDescription: >
      This parameter is restricted to the following values: sb, ci, qa, stg, prod
    Default: sb
    
  Service:
    Description: Service catalog name
    Type: String
    Default: research-administration

  Function:
    Description: The Function within the Service
    Type: String
    Default: kuali

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The id of the vpc to deploy to.

  PublicALB:
    Type: String
    Description: Should the ALB use a security group that allows public access? (assumes WAF is involved)
    Default: "false"
    AllowedValues:
    - "true"
    - "false"


Conditions:
  AlbIsPublic: !Equals [!Ref PublicALB, 'true']
  AlbIsPrivate: !Equals [!Ref PublicALB, 'false']


Mappings:
  2faCidrs:
    first:
      cidr: "168.122.81.0/24"
    second:
      cidr: "168.122.82.0/23"
    third:
      cidr: "168.122.76.0/24"
    fourth:
      cidr: "168.122.68.0/24"
    fifth:
      cidr: "168.122.69.0/24"
    sixth:
      cidr: "10.1.0.0/21"
    

Resources:

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        !Ref VpcId
      GroupName:
        !Sub ${GlobalTag}-${Landscape}-alb-security-group
      GroupDescription:
        This security group defines who/where is allowed to access the application
        load balancer that sits in front of the private subnets. Currently open to the public 
        internet (0.0.0.0/0) but can be restricted to certain ports.
      Tags:
      - Key: Name
        Value: 
          !Sub ${GlobalTag}-${Landscape}-alb-security-group
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: -1
        Description: Allow public access - all ports

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${GlobalTag}-${Landscape}-ec2-security-group
      GroupDescription:
        !Join
        - " "
        - - Limits access to ec2s running in the campus subnet to requests originating from vpn.bu.edu/2fa.
          - 'This includes allowing access from: '
          - 1) The application load balancer
          - 2) SSH access into the ec2 hosts
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: !Sub ${GlobalTag}-${Landscape}-ec2-security-group
      SecurityGroupIngress:
      - IpProtocol: -1
        SourceSecurityGroupId:
          !Ref ALBSecurityGroup
        Description: Allows inbound access to the EC2 instance from the ALB only.
      
      - Description: "HTTP: vpn.bu.edu/2fa On Campus, Group 1"
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !FindInMap [ 2faCidrs, "first", "cidr" ]
      - Description: "HTTP: vpn.bu.edu/2fa On Campus, Group 2 "
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !FindInMap [ 2faCidrs, "second", "cidr" ]
      - Description: "HTTP: vpn.bu.edu/2fa Off Campus"
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !FindInMap [ 2faCidrs, "third", "cidr" ]
      - Description: "HTTP: vpn.bu.edu/2fa Off Campus"
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !FindInMap [ 2faCidrs, "fourth", "cidr" ]
      - Description: "HTTP: vpn.bu.edu/2fa Off Campus"
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !FindInMap [ 2faCidrs, "fifth", "cidr" ]
      - Description: "HTTP: vpn.bu.edu/2fa Off Campus"
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !FindInMap [ 2faCidrs, "sixth", "cidr" ]
        
      - Description: "HTTPS: vpn.bu.edu/2fa On Campus, Group 1"
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !FindInMap [ 2faCidrs, "first", "cidr" ]
      - Description: "HTTPS: vpn.bu.edu/2fa On Campus, Group 2 "
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !FindInMap [ 2faCidrs, "second", "cidr" ]
      - Description: "HTTPS: vpn.bu.edu/2fa Off Campus"
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !FindInMap [ 2faCidrs, "third", "cidr" ]
      - Description: "HTTPS: vpn.bu.edu/2fa Off Campus"
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !FindInMap [ 2faCidrs, "fourth", "cidr" ]
      - Description: "HTTPS: vpn.bu.edu/2fa Off Campus"
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !FindInMap [ 2faCidrs, "fifth", "cidr" ]
      - Description: "HTTPS: vpn.bu.edu/2fa Off Campus"
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !FindInMap [ 2faCidrs, "sixth", "cidr" ]

Outputs:

  ECSHostSecurityGroup:
    Description: A reference to the security group for EC2 hosts in the ECS cluster
    Value:
      !Ref EC2SecurityGroup

  ALBSecurityGroup:
    Description: A reference to the security group for load balancer
    Value:
      !Ref ALBSecurityGroup
