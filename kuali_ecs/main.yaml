Description: >
  This is the primary template for building a cloud formation stack for
  the Kuali Research ecs cluster. All parameters for nested templates are set here.

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: Labelling
        Parameters: 
          - GlobalTag
          - Landscape
          - Baseline
          - Service
          - Function
      - Label:
          default: Network/Load-balancing
        Parameters:
          - VpcId
          - CampusSubnet1
          - PublicSubnet1
          - CampusSubnet2
          - PublicSubnet2
          - CertificateArn
          - EnableWAF
          - HostedZoneName
          - UsingShibboleth
      - Label: 
          default: "Amazon EC2 Configuration"
        Parameters: 
          - InstanceType
          - TemplateBucketName
      - Label: 
          default: "Kuali Services / Docker images"
        Parameters: 
          - CoreImage
          - KcImage
          - PortalImage
          - PdfImage
          - PdfS3BucketName
      - Label: 
          default: "Logging"
        Parameters: 
          - EnableALBLogging
          - EnableNewRelicAPM
          - EnableNewRelicInfrastructure
          - RetainLambdaCleanupLogs
      - Label:
          default: "RDS"
        Parameters:
          - RdsSnapshotARN
          - RdsEngineVersion
          - RdsDbSubnet1
          - RdsDbSubnet2
          - RdsSubnetCIDR1
          - RdsSubnetCIDR2
          - RdsJumpboxSubnetCIDR1
          - RdsJumpboxSubnetCIDR2
          - RdsAvailabilityZone          

Parameters:

  GlobalTag:
    Type: String
    Description: >
      A common value that all resources in this template will have prefixed to
      their name and attached as a tag to establish a bundling through naming convention.
    Default: kuali-ecs

  Landscape:
    Description: Specify a name for your landscape (keep it short)
    Type: String
    AllowedPattern: "[a-zA-Z\\d]{1,12}"
    ConstraintDescription: Up to 12 letters and/or numbers
  
  Baseline:
    Description: Specify one of a set of standard landscapes. Indicates secrets manager secrets to use for database access.
    Type: String
    AllowedPattern: "[a-zA-Z\\d]{1,12}"
    ConstraintDescription: Up to 12 letters and/or numbers

  Service:
    Description: Service catalog name
    Type: String
    Default: research-administration

  Function:
    Description: The Function within the Service
    Type: String
    Default: kuali

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The id of the vpc to deploy to.
    
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The first public subnet for the load balancer.

  CampusSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The first private subnet for one of the ec2 instances.

  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The second public subnet for the load balancer.

  CampusSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The second private subnet for one of the ec2 instances.
        
  InstanceType:
    Type: String
    Description: What type of EC2 instance should be used for hosting?
    AllowedValues:
    - t2.large
    - t2.xlarge
    - t3.large
    - t3.xlarge
    - m4.large
    - m4.xlarge
    - m5.large
    - m5.xlarge
    - c5.large
    - c5.xlarge
    ConstraintDescription: Specified instance type is not within selection list.
    Default: m4.large
  
  TemplateBucketName:
    Type: String
    Description: The S3 bucket kuali research cloudformation templates, config files, keys, etc. are stored
    Default: kuali-conf

  PdfS3BucketName:
    Type: String
    Description: The name of the s3 bucket the pdf service is to use.

  MinClusterSize:
    Type: Number
    Description: How many EC2 instances are to be initially deployed as ECS hosts
      accross your cluster?
    AllowedValues: [ 2, 3, 4 ]
    ConstraintDescription: Minimum cluster size is limited between 2 and 4 instances.
    Default: 2

  MaxClusterSize:
    Type: Number
    Description: How many EC2 instances are to be initially deployed as ECS hosts
      accross your cluster?
    AllowedValues: [ 2, 3, 4, 5, 6 ]
    ConstraintDescription: Maximum cluster size is limited between 1 and 6 instances.
    Default: 3

  CoreImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-core:2001.0040'

  KcImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-coeus:2001.0040'

  PortalImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-portal:2001.0040'

  PdfImage:
    Type: String
    Description: 'Example: 770203350335.dkr.ecr.us-east-1.amazonaws.com/kuali-research-pdf:2002.0003'

  CertificateArn:
    Type: String
    Description: The amazon resource name of a certificate that has already been put in ACM

  EC2KeypairName:
    # Type: AWS::EC2::KeyPair::KeyName
    Type: String
    Description: The keypair for ssh use against the ec2 instance
    Default: empty

  EnableNewRelicAPM:
    Type: String
    Description: Is newrelic APM to be enabled for this landscape?
    Default: "false"
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.

  EnableNewRelicInfrastructure:
    Type: String
    Description: Is newrelic infrastructure (with logging) to be enabled for this landscape?
    Default: "false"
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.

  EnableWAF:
    Type: String
    Description: Does the ALB traffic need to go through a WAF?
    Default: "false"
    AllowedValues:
    - "true"
    - "false"

  EnableALBLogging:
    Type: String
    Description: Does the ALB traffic need to be logged? (If WAF is enabled, the value you set here will be overriden to true)
    Default: "false"
    AllowedValues:
    - "true"
    - "false"

  RetainLambdaCleanupLogs:
    Type: String
    Description: Indicate if the logs produced by cleanup lambda functions should survive stack deletion.
    Default: "false"
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.

  MongoSubnetId:
    Type: String
    Description: Id of the private application subnet where a new mongo database ec2 instance is optionally created.
    Default: empty

  HostedZoneName:
    Type: String
    Description: If included, a DNS record will be created and registered with the specified HostedZone
    Default: empty

  UsingShibboleth:
    Type: String
    Description: True if using the BU shibboleth IDP for authentication, else dummy authentication (cor-main becomes its own IDP & SP).
    Default: "false"
    AllowedValues:
    - "true"
    - "false"
    ConstraintDescription: Enter "true" or "false" only.

  # --------------------------------------------------------------------------------------------
  #       RDS create from snapshotParameters:
  # --------------------------------------------------------------------------------------------
  RdsSnapshotARN:
    Description: The arn of an existing rds db snapshot. A new RDS instance will be restored from the snapshot for use by this stack.
    Type: String
    Default: empty
  RdsEngineVersion:
    Type: String
    Description: If cloning, The version number of the database engine to use.
    Default: empty
  RdsDbSubnet1:
    # Type: AWS::EC2::Subnet::Id
    Type: String
    Description: The first private subnet for one of the rds instances.
    Default: empty
  RdsDbSubnet2:
    # Type: AWS::EC2::Subnet::Id
    Type: String
    Description: The second private subnet for one of the rds instances.
    Default: empty  
  RdsSubnetCIDR1:
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: It must be a valid IP CIDR range of the form x.x.x.x/x. 
    Description: |
      The IP address range of the subnet containing the oracle RDS instances. 
      Accessible from the campus subnet over the default "local" route.
    MaxLength: 18
    MinLength: 9 
    Type: String
    Default: 0.0.0.0/0
  RdsSubnetCIDR2:
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: It must be a valid IP CIDR range of the form x.x.x.x/x. 
    Description: |
      The IP address range of the subnet containing the oracle RDS instances. 
      Accessible from the campus subnet over the default "local" route.
    MaxLength: 18
    MinLength: 9 
    Type: String
    Default: 0.0.0.0/0  
  RdsJumpboxInstanceType:
    Description: What size for the jumpbox? Omitting this parameter skips jumpbox creation
    Type: String
    Default: empty
  RdsAvailabilityZone:
    Type: String
    Description: The availability zone of the rds instance
    Default: empty

  # Or...
  
  # --------------------------------------------------------------------------------------------
  #       RDS parameters for pre-existing instance - rds instance pre-exists (is NOT getting created in this stack).
  # --------------------------------------------------------------------------------------------
  RdsRoute53Endpoint:
    # NOTE: HostedZoneName cannot be empty
    Type: String
    Description: Create a dns record using this endpoint value with the hosted zone for the pre-existing rds instance.
    Default: empty
  # Or... 2)
  RdsPrivateEndpoint:
    Type: String
    Description: The private endpoint address that the rds service automatically assigns to the instance when it is created.
    Default: empty
  # And...
  RdsVpcSecurityGroupId:
    Type: String
    Description: The id of the vpc security group associated with the existing rds instance
    Default: empty


Conditions:
  CreateWAF: !Equals [!Ref EnableWAF, 'true']
  # The dns record applies to the application addressing, and even though the database addressing could be specified in kc-config.xml 
  # using the private rds endpoint, this flag will indicate to create a CNAME record for the rds endpoint as well.
  CreateDnsRecord: !Not [!Equals [!Ref HostedZoneName, empty]]
  CreateMongoEc2Instance: !Not [!Equals [!Ref MongoSubnetId, empty]]
  CreateAlbLogsBuckets: !Or [!Equals [!Ref EnableALBLogging, 'true' ], Condition: CreateWAF]
  UseKeypair: !Not [!Equals [!Ref EC2KeypairName, empty]]
  IsProd: !Equals [!Ref Landscape, prod]
  CreateJumpboxInstance: !Not [!Equals [!Ref RdsJumpboxInstanceType, empty]]
  CreateRdsInstanceFromSnapshot: !Not [!Equals [!Ref RdsSnapshotARN, empty]]  
  UseExistingRdsInstance: !Not [ Condition: CreateRdsInstanceFromSnapshot ]
  RdsRoute53EndpointProvided: !Not [!Equals [!Ref RdsRoute53Endpoint, empty]]
  RdsPrivateEndpointProvided: !Not [!Equals [!Ref RdsPrivateEndpoint, empty]]
  CreateDnsRecordForRds: 
    !And
      - Condition: CreateDnsRecord
      - Condition: UseExistingRdsInstance
      - !Not [ !Equals [ !Ref RdsRoute53Endpoint, empty]]
      - !Not [ !Equals [ !Ref RdsPrivateEndpoint, empty]]


Resources:

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_ecs/security-group.yaml
      Parameters:
        GlobalTag: !Ref GlobalTag
        Landscape: !Ref Landscape
        Service: !Ref Service
        Function: !Ref Function
        VpcId: !Ref VpcId
        PublicALB: !If [ CreateWAF, 'true', 'false' ]
        RdsVpcSecurityGroupId:
          !If 
            - UseExistingRdsInstance
            - !Ref RdsVpcSecurityGroupId
            - !Ref AWS::NoValue

  RdsInstance:
    Type: AWS::CloudFormation::Stack
    Condition: CreateRdsInstanceFromSnapshot
    Properties:
      TemplateURL:
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_rds/rds-oracle.yaml
      Parameters:
        Landscape: !Ref Landscape
        Baseline: !Ref Baseline
        Service: !Ref Service
        Function: !Ref Function
        VpcId: !Ref VpcId
        DBInstanceClass: !If [ IsProd, db.m5.xlarge, !Ref AWS::NoValue ]
        RdsSnapshotARN: !Ref RdsSnapshotARN
        RdsEngineVersion: !Ref RdsEngineVersion
        RdsDbSubnet1: !Ref RdsDbSubnet1
        RdsDbSubnet2: !Ref RdsDbSubnet2
        RdsSubnetCIDR1: !Ref RdsSubnetCIDR1
        RdsSubnetCIDR2: !Ref RdsSubnetCIDR2
        JumpboxInstanceType: !If [ CreateJumpboxInstance, !Ref RdsJumpboxInstanceType, !Ref AWS::NoValue ]
        RdsAvailabilityZone: !Ref RdsAvailabilityZone
        ApplicationSecurityGroupId: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        HostedZoneName:
          !If
            - CreateDnsRecord
            - !Ref HostedZoneName
            - !Ref AWS::NoValue

  RdsDnsRecord:
    Type: AWS::CloudFormation::Stack
    Condition: CreateDnsRecordForRds
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_rds/rds-dns.yaml
      Parameters:
        Landscape: !Ref Landscape
        HostedZoneName: !Ref HostedZoneName
        DbEndpointAddress: !Ref RdsPrivateEndpoint

  BucketEmptierLambda:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_lambda/bucket_emptier.yaml
      Parameters:
        GlobalTag: !Ref GlobalTag
        Landscape: !Ref Landscape
        TemplateBucketName: !Ref TemplateBucketName
        Service: !Ref Service
        Function: !Ref Function
        RetainLogs: !Ref RetainLambdaCleanupLogs

  ALBWAFLogs:
    Type: AWS::CloudFormation::Stack
    DependsOn: BucketEmptierLambda
    Condition: CreateAlbLogsBuckets
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_alb/logs.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        Service:
          !Ref Service
        Function:
          !Ref Function
        TemplateBucketName:
          !Ref TemplateBucketName
        BucketEmptierLambdaArn:
          !GetAtt BucketEmptierLambda.Outputs.LambdaArn

  WAF:
    Type: AWS::CloudFormation::Stack
    Condition: CreateWAF
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_waf/waf.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        Service:
          !Ref Service
        Function:
          !Ref Function
        AlbLogsBucketName:
          !If
            - CreateAlbLogsBuckets
            - !GetAtt ALBWAFLogs.Outputs.ALBLogBucketName
            - !Ref AWS::NoValue
        GlueAccessLogsDatabaseName:
          !If
            - CreateAlbLogsBuckets
            - !GetAtt ALBWAFLogs.Outputs.GlueAccessLogsDatabaseName
            - !Ref AWS::NoValue
        TemplateBucketName: 
          !Ref TemplateBucketName
        BucketEmptierLambdaArn:
          !GetAtt BucketEmptierLambda.Outputs.LambdaArn
        RetainLambdaCleanupLogs: 
          !Ref RetainLambdaCleanupLogs

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_alb/alb.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        Service:
          !Ref Service
        Function:
          !Ref Function
        VpcId: 
          !Ref VpcId
        Subnet1: 
          !If 
            - CreateWAF
            - !Ref PublicSubnet1
            - !Ref CampusSubnet1
        Subnet2: 
          !If 
            - CreateWAF
            - !Ref PublicSubnet2
            - !Ref CampusSubnet2
        SecurityGroup: 
           !GetAtt SecurityGroups.Outputs.ALBSecurityGroup
        CertificateArn:
          !Ref CertificateArn
        # TemplateBucketName: 
        #   !Ref TemplateBucketName
        WafWebAclArn:
          !If
            - CreateWAF
            - !GetAtt WAF.Outputs.WafWebAclArn
            - !Ref AWS::NoValue
        HostedZoneName:
          !If
            - CreateDnsRecord
            - !Ref HostedZoneName
            - !Ref AWS::NoValue
        AlbLogsBucketName:
          !If
            - CreateAlbLogsBuckets
            - !GetAtt ALBWAFLogs.Outputs.ALBLogBucketName
            - !Ref AWS::NoValue
        RetainLambdaCleanupLogs: 
          !Ref RetainLambdaCleanupLogs

  MongoDbInstance:
    Type: AWS::CloudFormation::Stack
    Condition: CreateMongoEc2Instance
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_mongo/mongo.yaml
      Parameters:
        GlobalTag:
          !Sub ${GlobalTag}-mongo
        Landscape:
          !Ref Landscape
        Baseline:
          !Ref Baseline
        VpcId:
          !Ref VpcId
        MongoSubnet:
          !Ref MongoSubnetId
        TemplateBucketName: 
          !Ref TemplateBucketName
        ApplicationSecurityGroupId:
          !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_ecs/cluster.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        Baseline:
          !Ref Baseline
        SecurityGroupId:
          !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        VpcId: 
          !Ref VpcId
        DNSName:
          !If 
            - CreateDnsRecord
            - !If
              - IsProd
              - !Ref HostedZoneName
              - !Sub ${Landscape}.${HostedZoneName}
            - !GetAtt ALB.Outputs.DNSName
        EntityId:
          !If 
            - CreateDnsRecord
            - !If
              - IsProd
              - !Sub https://${HostedZoneName}/shibboleth
              - !Sub https://*.${HostedZoneName}/shibboleth
            - !GetAtt ALB.Outputs.DNSName
        RdsEndpoint:
          !If
            - RdsRoute53EndpointProvided
            - !Ref RdsRoute53Endpoint
            - !If
              - RdsPrivateEndpointProvided
              - !Ref RdsPrivateEndpoint
              - !If
                - CreateRdsInstanceFromSnapshot
                - !If
                    - CreateDnsRecord
                    - !GetAtt RdsInstance.Outputs.Route53Endpoint
                    - !GetAtt RdsInstance.Outputs.PrivateEndpoint
                - !Ref AWS::NoValue
                # Function getRdsHostname in process.configs.sh will try to "figure out" the rds endpoint
        UsingRoute53: !If [ CreateDnsRecord, 'true', 'false' ]
        InstanceType:
          !Ref InstanceType
        CampusSubnet1:
          !Ref CampusSubnet1
        CampusSubnet2:
          !Ref CampusSubnet2
        MongoEc2Ip:
          !If
            - CreateMongoEc2Instance
            - !GetAtt MongoDbInstance.Outputs.PrivateIP
            - !Ref AWS::NoValue
        MongoInstanceId:
          !If
            - CreateMongoEc2Instance
            - !GetAtt MongoDbInstance.Outputs.InstanceId
            - !Ref AWS::NoValue
        UsingShibboleth:
          !Ref UsingShibboleth
        MinClusterSize:
          !Ref MinClusterSize
        MaxClusterSize:
          !Ref MaxClusterSize
        TemplateBucketName:
          !Ref TemplateBucketName
        PdfS3BucketName: 
          !Ref PdfS3BucketName
        EC2KeypairName:
          !If 
            - UseKeypair
            - !Ref EC2KeypairName
            - !Ref AWS::NoValue
        EnableNewRelicAPM:
          !Ref EnableNewRelicAPM
        EnableNewRelicInfrastructure:
          !Ref EnableNewRelicInfrastructure

  # NOTE: This role is only necessary for the s3 access on the env-file.
  # The role in the ec2 profile would grant the logging and ecr privileges, but the service will only accept s3 access through a task execution role.
  # Once the task execution role is added, the service stops searching for the remaining policy actions at the ec2 level and requires that they too be
  # a part of the execution role, which is why they must now be added as well. Not sure what makes s3 so special, but there it is.
  # If s3 access is no longer needed, (remove the env-file property on the taskdef), you can remove this task execution role altogether. 
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
       !Sub ${GlobalTag}-${Landscape}-task-execution
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs-tasks.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
         !Sub ${GlobalTag}-${Landscape}-taskdef-s3-get
        PolicyDocument:
          Statement:
          - Effect: Allow
            Resource:
            - arn:aws:s3:::kuali-*
            Action:
            - s3:GetObject
            - s3:GetBucketLocation
          - Effect: Allow
            Resource: "*"
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:PutLogEvents
            - ecr:BatchCheckLayerAvailability
            - ecr:BatchGetImage
            - ecr:GetDownloadUrlForLayer
            - ecr:GetAuthorizationToken

  KualiCoreService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_ecs/service-core.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        TaskExecutionRoleArn:
          !GetAtt TaskExecutionRole.Arn
        EnvVarFileS3Arn:
          !Sub arn:aws:s3:::${TemplateBucketName}/${Baseline}/core/environment.variables.s3.env
        VpcId:
          !Ref VpcId
        ClusterId:
          !GetAtt ECS.Outputs.Cluster
        DesiredCount: !Ref MinClusterSize
        MaxCount: !Ref MaxClusterSize
        Listener:
          !GetAtt ALB.Outputs.Listener
        ECSContainerInstanceAutoScalingRoleARN:
          !GetAtt ECS.Outputs.ECSContainerInstanceAutoScalingRoleARN
        CoreImage:
          !Ref CoreImage

  KualiPdfService:
    Type: AWS::CloudFormation::Stack
    DependsOn: KualiCoreService
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_ecs/service-pdf.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        TaskExecutionRoleArn:
          !GetAtt TaskExecutionRole.Arn
        EnvVarFileS3Arn:
          !Sub arn:aws:s3:::${TemplateBucketName}/${Baseline}/pdf/environment.variables.s3.env
        VpcId:
          !Ref VpcId
        ClusterId:
          !GetAtt ECS.Outputs.Cluster
        DesiredCount: !Ref MinClusterSize
        MaxCount: !Ref MaxClusterSize
        Listener:
          !GetAtt ALB.Outputs.Listener
        ECSContainerInstanceAutoScalingRoleARN:
          !GetAtt ECS.Outputs.ECSContainerInstanceAutoScalingRoleARN
        PdfImage:
          !Ref PdfImage
        PdfS3BucketName: 
          !Ref PdfS3BucketName
        BucketEmptierLambdaArn:
          !GetAtt BucketEmptierLambda.Outputs.LambdaArn

  KualiDashboardService:
    Type: AWS::CloudFormation::Stack
    DependsOn: KualiPdfService
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_ecs/service-dashboard.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        TaskExecutionRoleArn:
          !GetAtt TaskExecutionRole.Arn
        EnvVarFileS3Arn:
          !Sub arn:aws:s3:::${TemplateBucketName}/${Baseline}/portal/environment.variables.s3.env
        VpcId:
          !Ref VpcId
        ClusterId:
          !GetAtt ECS.Outputs.Cluster
        DesiredCount: !Ref MinClusterSize
        MaxCount: !Ref MaxClusterSize
        Listener:
          !GetAtt ALB.Outputs.Listener
        ECSContainerInstanceAutoScalingRoleARN:
          !GetAtt ECS.Outputs.ECSContainerInstanceAutoScalingRoleARN
        PortalImage:
          !Ref PortalImage

  KualiResearchService:
    Type: AWS::CloudFormation::Stack
    DependsOn: KualiDashboardService
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_ecs/service-research.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        TaskExecutionRoleArn:
          !GetAtt TaskExecutionRole.Arn
        EnvVarFileS3Arn:
          !Sub arn:aws:s3:::${TemplateBucketName}/${Baseline}/kc/temp/${Landscape}.environment.variables.s3.env
        VpcId:
          !Ref VpcId
        ClusterId:
          !GetAtt ECS.Outputs.Cluster
        DesiredCount: !Ref MinClusterSize
        MaxCount: !Ref MaxClusterSize
        Listener:
          !GetAtt ALB.Outputs.Listener
        ECSContainerInstanceAutoScalingRoleARN:
          !GetAtt ECS.Outputs.ECSContainerInstanceAutoScalingRoleARN
        KcImage:
          !Ref KcImage
        EnableNewRelicAPM:
          !Ref EnableNewRelicAPM

  LifeCycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub https://s3.amazonaws.com/${TemplateBucketName}/cloudformation/kuali_ecs/lifecycle-hook.yaml
      Parameters:
        GlobalTag:
          !Ref GlobalTag
        Landscape:
          !Ref Landscape
        Cluster:
          !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName:
          !GetAtt ECS.Outputs.ECSContainerInstanceAutoScalingGroupName


Outputs:

  KualiResearchUrl:
    Description: The URL endpoint for the kuali research service
    Value:
      !Sub 
      - https://${domain}/kc
      - domain: !If 
        - CreateDnsRecord
        - !If
          - IsProd
          - !Ref HostedZoneName
          - !Sub ${Landscape}.${HostedZoneName}
        - !GetAtt ALB.Outputs.DNSName

  KualiCorMainUrl:
    Description: The URL endpoint for the kuali research service
    Value:
      !Sub 
      - https://${domain}/apps
      - domain: !If 
        - CreateDnsRecord
        - !If
          - IsProd
          - !Ref HostedZoneName
          - !Sub ${Landscape}.${HostedZoneName}
        - !GetAtt ALB.Outputs.DNSName

  Cluster:
    Description: THe name of the ecs cluster of ec2 hosts
    Value: !GetAtt ECS.Outputs.Cluster

